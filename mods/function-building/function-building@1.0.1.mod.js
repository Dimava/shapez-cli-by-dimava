(function (exports) {
    'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    shapez;
    const { Application, CHANGELOG, AnimationFrame, compressionPrefix, asyncCompressor, AtlasDefinition, atlasFiles, getLogoSprite, BackgroundResourcesLoader, BufferMaintainer, enableImageSmoothing, disableImageSmoothing, getBufferVramUsageBytes, getBufferStats, clearBufferBacklog, makeOffscreenBuffer, registerCanvas, freeCanvas, cachebust, MAX_MOVE_DISTANCE_PX, clickDetectorGlobals, ClickDetector, IS_DEBUG, SUPPORT_TOUCH, IS_MAC, THIRDPARTY_URLS, A_B_TESTING_LINK_TYPE, globalConfig, IS_MOBILE, getDeviceDPI, smoothenDpi, prepareHighDPIContext, resizeHighDPICanvas, resizeCanvas, resizeCanvasAndClear, DrawParameters, initDrawUtils, drawRotatedSprite, drawSpriteClipped, APPLICATION_ERROR_OCCURED, ExplainedResult, Factory, GameState, gMetaBuildingRegistry, gBuildingsByCategory, gComponentRegistry, gGameModeRegistry, gGameSpeedRegistry, gItemRegistry, initBuildingsByCategory, GLOBAL_APP, setGlobalApp, BUILD_OPTIONS, InputDistributor, InputReceiver, Loader, createLogger, serializeError, stringifyObjectContainingErrors, globalDebug, globalLog, globalWarn, globalError, logSection, compressU8, compressU8WHeader, decompressU8WHeader, compressX64, decompressX64, Dialog, DialogLoading, DialogOptionChooser, DialogWithForm, FormElement, FormElementInput, FormElementCheckbox, FormElementItemChooser, queryParamOptions, ReadWriteProxy, Rectangle, PROMISE_ABORTED, RequestChannel, RestrictionManager, RandomNumberGenerator, sha1, getNameOfProvider, CRC_PREFIX, computeCrc, STOP_PROPAGATION, Signal, SingletonFactory, ORIGINAL_SPRITE_SCALE, FULL_CLIP_RECT, BaseSprite, SpriteAtlasLink, AtlasSprite, RegularSprite, StaleAreaDetector, StateManager, TextualGameState, TrackedState, isAndroid, isIos, getPlatformName, make2DUndefinedArray, newEmptyMap, randomInt, accessNestedPropertyReverse, randomChoice, fastArrayDelete, fastArrayDeleteValue, fastArrayDeleteValueIfContained, arrayDelete, arrayDeleteValue, epsilonCompare, lerp, findNiceValue, findNiceIntegerValue, formatBigNumber, formatBigNumberFull, waitNextFrame, round1Digit, round2Digits, round3Digits, round4Digits, clamp, makeDivElement, makeDiv, makeButtonElement, makeButton, removeAllChildren, isSupportedBrowser, formatSecondsToTimeAgo, formatSeconds, round1DigitLocalized, formatItemsPerSecond, rotateFlatMatrix3x3, generateMatrixRotations, rotateDirectionalObject, safeModulo, smoothPulse, fillInLinkIntoTranslation, generateFileDownload, startFileChoose, getRomanNumber, enumDirection, enumInvertedDirections, enumDirectionToAngle, enumAngleToDirection, arrayAllDirections, Vector, mixVector, enumDirectionToVector, AchievementProxy, enumSavePriority, AutomaticSave, BaseItem, BeltPath, Blueprint, gBuildingVariants, registerBuildingVariant, getBuildingDataFromCode, buildBuildingCodeCache, getCodeFromBuildingData, MetaAnalyzerBuilding, enumBalancerVariants, MetaBalancerBuilding, arrayBeltVariantToRotation, beltOverlayMatrices, MetaBeltBuilding, MetaBlockBuilding, MetaComparatorBuilding, MetaConstantProducerBuilding, MetaConstantSignalBuilding, enumCutterVariants, MetaCutterBuilding, MetaDisplayBuilding, MetaFilterBuilding, MetaGoalAcceptorBuilding, MetaHubBuilding, MetaItemProducerBuilding, MetaLeverBuilding, enumLogicGateVariants, MetaLogicGateBuilding, enumMinerVariants, MetaMinerBuilding, MetaMixerBuilding, enumPainterVariants, MetaPainterBuilding, MetaReaderBuilding, enumRotaterVariants, MetaRotaterBuilding, MetaStackerBuilding, MetaStorageBuilding, enumTransistorVariants, MetaTransistorBuilding, MetaTrashBuilding, arrayUndergroundRotationVariantToMode, enumUndergroundBeltVariants, enumUndergroundBeltVariantToTier, MetaUndergroundBeltBuilding, enumVirtualProcessorVariants, MetaVirtualProcessorBuilding, arrayWireRotationVariantToType, wireOverlayMatrices, wireVariants, MetaWireBuilding, MetaWireTunnelBuilding, USER_INTERACT_MOVE, USER_INTERACT_ZOOM, USER_INTERACT_TOUCHEND, enumMouseButton, Camera, enumColors, enumColorToShortcode, enumShortcodeToColor, enumColorsToHexCode, enumColorMixingResults, Component, initComponentRegistry, curvedBeltLength, FAKE_BELT_ACCEPTOR_SLOT, FAKE_BELT_EJECTOR_SLOT_BY_DIRECTION, BeltComponent, enumBeltReaderType, BeltReaderComponent, enumClippedBeltUnderlayType, BeltUnderlaysComponent, ConstantSignalComponent, DisplayComponent, FilterComponent, GoalAcceptorComponent, HubComponent, ItemAcceptorComponent, ItemEjectorComponent, enumItemProcessorTypes, enumItemProcessorRequirements, ItemProcessorComponent, ItemProducerComponent, LeverComponent, enumLogicGateType, LogicGateComponent, MinerComponent, StaticMapEntityComponent, MODS_ADDITIONAL_STORAGE_ITEM_RESOLVER, StorageComponent, enumUndergroundBeltMode, UndergroundBeltComponent, enumWireType, enumWireVariant, WireComponent, WireTunnelComponent, enumPinSlotType, WiredPinsComponent, GameCore, DynamicTickrate, Entity, EntityComponentStorage, EntityManager, GameLoadingOverlay, enumGameModeIds, enumGameModeTypes, GameMode, initGameModeRegistry, initGameSpeedRegistry, GameSystem, MODS_ADDITIONAL_SYSTEMS, GameSystemManager, GameSystemWithFilter, getRandomHint, MOD_ITEM_PROCESSOR_SPEEDS, HubGoals, BaseHUDPart, DynamicDomAttach, GameHUD, HUDBaseToolbar, HUDBetaOverlay, HUDBlueprintPlacer, HUDBuildingPlacer, HUDBuildingPlacerLogic, HUDBuildingsToolbar, HUDCatMemes, HUDColorBlindHelper, MODS_ADDITIONAL_CONSTANT_SIGNAL_RESOLVER, HUDConstantSignalEdit, HUDChangesDebugger, HUDDebugInfo, HUDGameMenu, HUDInteractiveTutorial, HUDKeybindingOverlay, HUDLayerPreview, HUDLeverToggle, HUDMassSelector, HUDMinerHighlight, HUDModalDialogs, HUDPuzzleNextPuzzle, enumNotificationType, HUDNotifications, HUDPinnedShapes, HUDPuzzleBackToMenu, HUDPuzzleCompleteNotification, HUDPuzzleDLCLogo, HUDPuzzleEditorControls, HUDPuzzleEditorReview, HUDPuzzleEditorSettings, HUDPuzzlePlayMetadata, HUDPuzzlePlaySettings, HUDSandboxController, HUDScreenshotExporter, HUDSettingsMenu, HUDShapeTooltip, HUDShapeViewer, HUDShop, HUDStandaloneAdvantages, HUDStatistics, enumDisplayMode, statisticsUnitsSeconds, HUDShapeStatisticsHandle, HUDPartTutorialHints, HUDTutorialVideoOffer, HUDUnlockNotification, HUDVignetteOverlay, HUDWatermark, HUDWaypoints, HUDWireInfo, HUDWiresOverlay, HUDWiresToolbar, initItemRegistry, MODS_ADDITIONAL_ITEMS, itemResolverSingleton, typeItemSingleton, BooleanItem, BOOL_FALSE_SINGLETON, BOOL_TRUE_SINGLETON, isTrueItem, isTruthyItem, ColorItem, COLOR_ITEM_SINGLETONS, ShapeItem, keyToKeyCode, KEYCODES, KEYMAPPINGS, KEYCODE_LMB, KEYCODE_MMB, KEYCODE_RMB, getStringForKeyCode, Keybinding, KeyActionMapper, GameLogic, BaseMap, MODS_ADDITIONAL_SHAPE_MAP_WEIGHTS, MapChunk, MapChunkAggregate, CHUNK_OVERLAY_RES, MOD_CHUNK_DRAW_HOOKS, MapChunkView, MapView, defaultBuildingVariant, MetaBuilding, registerBuildingVariants, initMetaBuildingRegistry, initBuildingCodesAfterResourcesLoaded, PuzzleGameMode, PuzzleEditGameMode, PuzzlePlayGameMode, rocketShape, finalGameShape, generateLevelDefinitions, RegularGameMode, enumAnalyticsDataSource, ProductionAnalytics, layers, GameRoot, MODS_ADDITIONAL_SUB_SHAPE_DRAWERS, TOP_RIGHT, BOTTOM_RIGHT, BOTTOM_LEFT, TOP_LEFT, enumSubShape, enumSubShapeToShortcode, enumShortcodeToSubShape, createSimpleShape, ShapeDefinition, ShapeDefinitionManager, SoundProxy, BELT_ANIM_COUNT, BeltSystem, BeltReaderSystem, BeltUnderlaysSystem, ConstantProducerSystem, ConstantSignalSystem, MODS_ADDITIONAL_DISPLAY_ITEM_RESOLVER, MODS_ADDITIONAL_DISPLAY_ITEM_DRAW, DisplaySystem, FilterSystem, GoalAcceptorSystem, HubSystem, ItemAcceptorSystem, ItemEjectorSystem, MOD_ITEM_PROCESSOR_HANDLERS, MODS_PROCESSING_REQUIREMENTS, MODS_CAN_PROCESS, ItemProcessorSystem, ItemProcessorOverlaysSystem, ItemProducerSystem, LeverSystem, LogicGateSystem, MapResourcesSystem, MinerSystem, StaticMapEntitySystem, StorageSystem, UndergroundBeltSystem, WireNetwork, WireSystem, WiredPinsSystem, ZoneSystem, THEMES, THEME, applyGameTheme, BaseGameSpeed, FastForwardGameSpeed, GameTime, PausedGameSpeed, RegularGameSpeed, enumHubGoalRewards, enumHubGoalRewardsToContentUnlocked, LANGUAGES, Mod, ModInterface, ModMetaBuilding, MOD_SIGNALS, ModLoader, MODS, ACHIEVEMENTS, AchievementProviderInterface, Achievement, AchievementCollection, AdProviderInterface, AdinplayAdProvider, GamedistributionAdProvider, NoAdProvider, AnalyticsInterface, ClientAPI, ShapezGameAnalytics, GoogleAnalyticsImpl, NoAchievementProvider, NoGameAnalytics, SoundImplBrowser, StorageImplBrowser, StorageImplBrowserIndexedDB, PlatformWrapperImplBrowser, SteamAchievementProvider, StorageImplElectron, PlatformWrapperImplElectron, GameAnalyticsInterface, SOUNDS, MUSIC, SoundInstanceInterface, MusicInstanceInterface, SoundInterface, FILE_NOT_FOUND, StorageInterface, PlatformWrapperInterface, enumCategories, uiScales, scrollWheelSensitivities, movementSpeeds, autosaveIntervals, refreshRateOptions, ApplicationSettings, BaseSetting, EnumSetting, BoolSetting, RangeSetting, PuzzleSerializer, Savegame, compressObject, decompressObject, BaseSavegameInterface, savegameInterfaces, getSavegameInterface, enumLocalSavegameStatus, SavegameManager, SavegameSerializer, SavegameInterface_V1000, SavegameInterface_V1001, SavegameInterface_V1002, SavegameInterface_V1003, SavegameInterface_V1004, SavegameInterface_V1005, SavegameInterface_V1006, SavegameInterface_V1007, SavegameInterface_V1008, SavegameInterface_V1009, SavegameInterface_V1010, types, BasicSerializableObject, serializeSchema, deserializeSchema, verifySchema, extendSchema, globalJsonSchemaDefs, schemaToJsonSchema, BaseDataType, TypeInteger, TypePositiveInteger, TypePositiveIntegerOrString, TypeBoolean, TypeString, TypeVector, TypeTileVector, TypeNumber, TypePositiveNumber, TypeEnum, TypeEntity, TypeEntityWeakref, TypeClass, TypeClassData, TypeClassFromMetaclass, TypeMetaClass, TypeArray, TypeFixedClass, TypeKeyValueMap, TypeClassId, TypePair, TypeNullable, TypeStructuredObject, SerializerInternal, AboutState, ChangelogState, GAME_LOADING_STATES, gameCreationAction, GameCreationPayload, InGameState, KeybindingsState, LoginState, MainMenuState, MobileWarningState, ModsState, PreloadState, PuzzleMenuState, SettingsState, WegameSplashState, T, autoDetectLanguageId, matchDataRecursive, updateApplicationLanguage } = shapez;

    function base64ToPng(file) {
        return `data:image/png;base64,${file}`;
    }
    function Metadata(METADATA) {
        return (Mod) => {
            Mod.register(METADATA);
        };
    }
    class ModBase extends Mod {
        extendSuperclass(subclassOrMaker) {
            if (subclassOrMaker.prototype) {
                let subclass = subclassOrMaker;
                let superclass = Object.getPrototypeOf(subclass);
                return this.modInterface.extendClass(superclass, () => subclass.prototype);
            }
            else {
                let maker = subclassOrMaker;
                let superclass = Object.getPrototypeOf(maker({}));
                return this.modInterface.extendClass(superclass, ({ $old }) => maker($old).prototype);
            }
        }
        static register(metadata) {
            window.$shapez_registerMod(this, metadata);
        }
        use(module) {
            module.install(this);
            return this;
        }
    }

    var fn_call = "iVBORw0KGgoAAAANSUhEUgAABAAAAAEACAYAAAAtJQQkAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAANBaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuZGFiYWNiYiwgMjAyMS8wNC8xNC0wMDozOTo0NCAgICAgICAgIj4NCiAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCiAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMCAoTWFjaW50b3NoKSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpGQzJBRkJGOTZFMkExMUVDOUFGNDk0MjVEMjg1NjVERiIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDpGQzJBRkJGQTZFMkExMUVDOUFGNDk0MjVEMjg1NjVERiI+DQogICAgICA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpGQzJBRkJGNzZFMkExMUVDOUFGNDk0MjVEMjg1NjVERiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDpGQzJBRkJGODZFMkExMUVDOUFGNDk0MjVEMjg1NjVERiIgLz4NCiAgICA8L3JkZjpEZXNjcmlwdGlvbj4NCiAgPC9yZGY6UkRGPg0KPC94OnhtcG1l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";

    var fn_process = "";

    const RESOURCES = {
        fn_call: base64ToPng(fn_call),
        fn_process: base64ToPng(fn_process),
    };

    const var_call = 'virtual-function-call';
    const var_process = 'virtual-function-process';
    const STABLE_LIMIT = 20;
    class FnBuilding extends MetaVirtualProcessorBuilding {
        updateVariants(entity, rotationVariant, variant) {
            const gateType = variant;
            entity.components.LogicGate.type = gateType;
            const pinComp = entity.components.WiredPins;
            pinComp.setSlots([
                // name
                { pos: new Vector(0, 0), direction: enumDirection.left, type: enumPinSlotType.logicalAcceptor },
                // arguments
                { pos: new Vector(0, 0), direction: enumDirection.bottom, type: enumPinSlotType.logicalAcceptor },
                { pos: new Vector(1, 0), direction: enumDirection.bottom, type: enumPinSlotType.logicalAcceptor },
                { pos: new Vector(2, 0), direction: enumDirection.bottom, type: enumPinSlotType.logicalAcceptor },
                { pos: new Vector(3, 0), direction: enumDirection.bottom, type: enumPinSlotType.logicalAcceptor },
                // return
                { pos: new Vector(0, 0), direction: enumDirection.top, type: enumPinSlotType.logicalEjector },
                { pos: new Vector(1, 0), direction: enumDirection.top, type: enumPinSlotType.logicalEjector },
                { pos: new Vector(2, 0), direction: enumDirection.top, type: enumPinSlotType.logicalEjector },
                { pos: new Vector(3, 0), direction: enumDirection.top, type: enumPinSlotType.logicalEjector },
            ]);
        }
        static requests = {};
        static results = {};
        // static results : Map<string, >
        // static cache = new Map<string, (BaseItem | null)[]>();
        static compute_FN_CALL(parameters) {
            let [oName, ...oArgs] = parameters;
            let name = oName?.getAsCopyableKey() ?? 'null';
            let fnResults = FnBuilding.results[name] ??= {};
            let argsStr = oArgs.map(e => e?.getAsCopyableKey() ?? 'null').join(';');
            let result = fnResults[argsStr];
            if (result && result.stability >= STABLE_LIMIT)
                return result.result.concat([BOOL_TRUE_SINGLETON]);
            FnBuilding.requests[name] = {
                hashArgs: argsStr,
                args: oArgs,
            };
            if (result)
                return result.result.concat([BOOL_FALSE_SINGLETON]);
            // console.log('call:', parameters);
            return parameters.slice(1).concat([BOOL_FALSE_SINGLETON]);
        }
        static compute_FN_PROCESS(parameters) {
            let [oName, ...oArgs] = parameters;
            let name = oName?.getAsCopyableKey() ?? 'null';
            let resultStr = oArgs.map(e => e?.getAsCopyableKey() ?? 'null').join(';');
            let fnRequest = FnBuilding.requests[name];
            let fnResults = FnBuilding.results[name] ??= {};
            if (parameters.every(e => e?.getAsCopyableKey() == name)) {
                fnResults = FnBuilding.results[name] = {};
            }
            if (!fnRequest)
                return [null, null, null, null, BOOL_FALSE_SINGLETON];
            let result = fnResults[fnRequest.hashArgs] ??= { hashResult: '', result: [], stability: 0 };
            console.log(result);
            if (result.hashResult == resultStr) {
                result.stability++;
                if (result.stability > STABLE_LIMIT)
                    delete FnBuilding.requests[name];
            }
            else {
                result.stability = 0;
                result.hashResult = resultStr;
                result.result = oArgs;
            }
            return fnRequest.args;
        }
        static install(mod) {
            // MOD_ITEM_PROCESSOR_HANDLERS[FnBuilding.variant as any] = FnBuilding.process;
            mod.modInterface.addVariantToExistingBuilding(MetaVirtualProcessorBuilding, var_call, {
                name: 'Function',
                description: 'test_desc',
                tutorialImageBase64: RESOURCES.fn_call,
                regularSpriteBase64: RESOURCES.fn_call,
                blueprintSpriteBase64: RESOURCES.fn_call,
                dimensions: new Vector(4, 1),
                isUnlocked(root) {
                    return true;
                },
            });
            mod.modInterface.addVariantToExistingBuilding(MetaVirtualProcessorBuilding, var_process, {
                name: 'Function',
                description: 'test_desc',
                tutorialImageBase64: RESOURCES.fn_process,
                regularSpriteBase64: RESOURCES.fn_process,
                blueprintSpriteBase64: RESOURCES.fn_process,
                dimensions: new Vector(4, 1),
                isUnlocked(root) {
                    return true;
                },
            });
            mod.extendSuperclass($old => class extends MetaVirtualProcessorBuilding {
                updateVariants(entity, rotationVariant, variant) {
                    if (variant == var_call || variant == var_process) {
                        return FnBuilding.prototype.updateVariants.call(this, entity, rotationVariant, variant);
                    }
                    return $old.updateVariants.call(this, entity, rotationVariant, variant);
                }
            });
            mod.extendSuperclass($old => class extends LogicGateSystem {
                update() {
                    this.boundOperations[var_call] ??= FnBuilding.compute_FN_CALL.bind(this);
                    this.boundOperations[var_process] ??= FnBuilding.compute_FN_PROCESS.bind(this);
                    return $old.update.call(this);
                }
            });
        }
    }

    exports.Mod = class Mod extends ModBase {
        init() {
            this.use(FnBuilding);
        }
    };
    exports.Mod = __decorate([
        Metadata({
            name: 'Function Building',
            version: '1.0.1',
            author: '',
            website: '',
            description: '',
            id: 'fn-building'
        })
    ], exports.Mod);

    Object.defineProperty(exports, '__esModule', { value: true });

    return exports;

})({});
